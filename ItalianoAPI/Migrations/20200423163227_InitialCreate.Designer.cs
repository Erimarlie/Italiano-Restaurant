// <auto-generated />
using ItalianoAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ItalianoAPI.Migrations
{
    [DbContext(typeof(ItalianoContext))]
    [Migration("20200423163227_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3");

            modelBuilder.Entity("ItalianoAPI.Models.DessertMenu", b =>
                {
                    b.Property<int>("DessertId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImgSrc")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Price")
                        .HasColumnType("INTEGER");

                    b.HasKey("DessertId");

                    b.ToTable("DessertMenu");
                });

            modelBuilder.Entity("ItalianoAPI.Models.DessertRatings", b =>
                {
                    b.Property<int>("RatingsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DessertFK")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Rating")
                        .HasColumnType("INTEGER");

                    b.HasKey("RatingsId");

                    b.HasIndex("DessertFK");

                    b.ToTable("DessertRatings");
                });

            modelBuilder.Entity("ItalianoAPI.Models.DrinkInfo", b =>
                {
                    b.Property<int>("DrinkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("AvgRating")
                        .HasColumnType("REAL");

                    b.Property<string>("Category")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImgSrc")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Price")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalVotes")
                        .HasColumnType("INTEGER");

                    b.HasKey("DrinkId");

                    b.ToTable("DrinkInfo");
                });

            modelBuilder.Entity("ItalianoAPI.Models.DrinkMenu", b =>
                {
                    b.Property<int>("DrinkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImgSrc")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Price")
                        .HasColumnType("INTEGER");

                    b.HasKey("DrinkId");

                    b.ToTable("DrinkMenu");
                });

            modelBuilder.Entity("ItalianoAPI.Models.DrinkRatings", b =>
                {
                    b.Property<int>("RatingsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DrinkFK")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Rating")
                        .HasColumnType("INTEGER");

                    b.HasKey("RatingsId");

                    b.HasIndex("DrinkFK");

                    b.ToTable("DrinkRatings");
                });

            modelBuilder.Entity("ItalianoAPI.Models.FoodInfo", b =>
                {
                    b.Property<int>("FoodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("AvgRating")
                        .HasColumnType("REAL");

                    b.Property<string>("Category")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImgSrc")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Price")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalVotes")
                        .HasColumnType("INTEGER");

                    b.HasKey("FoodId");

                    b.ToTable("FoodInfo");
                });

            modelBuilder.Entity("ItalianoAPI.Models.FoodMenu", b =>
                {
                    b.Property<int>("FoodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImgSrc")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Price")
                        .HasColumnType("INTEGER");

                    b.HasKey("FoodId");

                    b.ToTable("FoodMenu");
                });

            modelBuilder.Entity("ItalianoAPI.Models.FoodRatings", b =>
                {
                    b.Property<int>("RatingsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("FoodFK")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Rating")
                        .HasColumnType("INTEGER");

                    b.HasKey("RatingsId");

                    b.HasIndex("FoodFK");

                    b.ToTable("FoodRatings");
                });

            modelBuilder.Entity("ItalianoAPI.Models.Orders", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("DessertFK")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DrinkFK")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FoodFK")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Price")
                        .HasColumnType("INTEGER");

                    b.HasKey("OrderId");

                    b.HasIndex("DessertFK");

                    b.HasIndex("DrinkFK");

                    b.HasIndex("FoodFK");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ItalianoAPI.Models.DessertRatings", b =>
                {
                    b.HasOne("ItalianoAPI.Models.DessertMenu", "DessertMenu")
                        .WithMany()
                        .HasForeignKey("DessertFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ItalianoAPI.Models.DrinkRatings", b =>
                {
                    b.HasOne("ItalianoAPI.Models.DrinkMenu", "DrinkMenu")
                        .WithMany()
                        .HasForeignKey("DrinkFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ItalianoAPI.Models.FoodRatings", b =>
                {
                    b.HasOne("ItalianoAPI.Models.FoodMenu", "FoodMenu")
                        .WithMany()
                        .HasForeignKey("FoodFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ItalianoAPI.Models.Orders", b =>
                {
                    b.HasOne("ItalianoAPI.Models.DessertMenu", "DessertMenu")
                        .WithMany()
                        .HasForeignKey("DessertFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ItalianoAPI.Models.DrinkMenu", "DrinkMenu")
                        .WithMany()
                        .HasForeignKey("DrinkFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ItalianoAPI.Models.FoodMenu", "FoodMenu")
                        .WithMany()
                        .HasForeignKey("FoodFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
